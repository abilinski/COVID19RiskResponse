#************************************** SUMMARY STATS *************************************#
#                                                                                          #
#                                                                                          #
# This files generates summary statistics + plots for the top 200 school districts         #
# By: Alyssa Bilinski                                                                      #
#******************************************************************************************#

#### SETUP ####

# source here library for file management
library(here)

# source global options
source(here("global_options.R"))

# read in files
g = list.files(here("Schools", "burbiosampledataforjbrpt"))
files = g[grepl("Top200", g)]
dates = c(as.Date("2021-01-05"), as.Date("2020-10-27"), as.Date("2020-11-24"))

f = data.frame()
for(i in 1:length(files)){
  f = f %>% bind_rows(read.csv(here("Schools", "burbiosampledataforjbrpt", files[i])) %>% 
                        mutate(time = dates[i],
                               # fix merge conflicts
                               Revisit.Date = as.character(Revisit.Date),
                               Planned.Transition.Date = as.character(Planned.Transition.Date)))
}

# merging with other files
# Districts --> Counties
d = read.csv(here("Schools", "burbiosampledataforjbrpt", "districts.csv"),
             header = T) 

# Population by county
pop = read.csv(here("Schools", "burbiosampledataforjbrpt", "county_pop.csv")) %>%
  separate(GEO_ID, into = c("junk", "fips"), sep = "US") %>%
  mutate(fips = as.numeric(fips))

# cases by county
cases = read.csv(here("Schools", "burbiosampledataforjbrpt",
                      "time_series_covid19_confirmed_US.csv")) %>% 
  gather(date, cases, -c(1:11)) %>%
  mutate(date = sub("X", "", date),
         date = as.Date(date, format = "%m.%d.%y"),
         date_7 = date-7) %>%
    group_by(FIPS, Admin2, Province_State, Combined_Key) %>% 
  mutate(chk = sum(as.Date(date)==as.Date(date_7)),
         cases_7 = lag(cases, 7),
         cases_7d_avg = (cases - cases_7)/7) %>%
  left_join(pop, c("FIPS" = "fips")) %>% 
  mutate(Admin2 = sub("city", "City", Admin2),
         cases_7d_avg_100K = cases_7d_avg/B01003_001E*100000) 

g = f %>% 
  # merge with district codes
  left_join(d, c("NCES.District.ID" = 
                   "Agency.ID...NCES.Assigned..District..Latest.available.year")) %>%
  separate(County.Name..District..2018.19, 
           sep = " County", into = c("county", "other"), remove = F) %>%
  
  # prep to merge with county
  mutate(county = sub("city", "City", county),
         county = sub(" Parish", "", county),
         county = case_when(county=="Virginia Beach City"~"Virginia Beach",
                            county=="Anchorage Municipality"~"Anchorage",
                            county=="Chesapeake City"~"Chesapeake",
                            TRUE~county),
         state = case_when(State.Name..District..Latest.available.yearx=="MICHIGAN"~"Michigan",
                           TRUE~State.Name..District..Latest.available.yearx)) %>%
  
  #  merge with county
  left_join(cases, c("county"="Admin2", "time"="date",
                     "state" = "Province_State")) 

    # function to parse weird ones
    parse_exp = function(char){
      
      if(grepl("/", char)){
        a = substring(char,2,2); b = substring(char,1,1)
        c = substring(char,5,5); d = substring(char,4,4)
        #print(a); print(b); print(c); print(d)
        
        out = paste(c(rep(a, as.numeric(b)),
              rep(c, as.numeric(d))), collapse = "")
      }else{out = char}
      return(out)
      
    }
  parse_vec = Vectorize(parse_exp) # vectorize function

  dist = c("Sweetwater Union High", "Kern High")
  # categorize schools 
  h = g %>% 
    gather(var, value, GR.K.5, GR.6.8, GR.9.12) %>%
    mutate(
      value = ifelse(value=="na",  NA,  value),
      value = ifelse(grepl("/", value),parse_vec(value),value),
      H = str_count(value, "H")/nchar(value)*100,
      V = str_count(value, "V")/nchar(value)*100,
      T = str_count(value, "T")/nchar(value)*100) %>%
    gather(var2, value2, H, V, T) %>% 
    mutate(var_comp = paste(var, var2, sep = "_")) %>%
    dplyr::select(-var,-var2,-value) %>%
    spread(var_comp, value2) %>%
    mutate(GR.K.8_H = GR.K.5_H*2/3 + GR.6.8_H*1/3,
           GR.K.8_V = GR.K.5_V*2/3 + GR.6.8_V*1/3,
           GR.K.8_T = GR.K.5_T*2/3 + GR.6.8_T*1/3) %>%
    gather(var, value, X..U, X..T, X..V, X..H) %>%
    mutate(var = sub("X..", "", var)) %>% spread(var, value) %>%
    gather(var, value, H, V, T, GR.K.8_H, GR.K.8_V, GR.K.8_T, GR.K.5_H,
           GR.K.5_T, GR.K.5_V) %>%
    mutate(var = sub("GR.", "", var),
           var = ifelse(substring(var, 1,1)!="K", paste("K.12_", var, sep = ""), var),
           cases_cat = cut(cases_7d_avg_100K, breaks = c(0, 5, 15, 30, 60, 90, 150)),
           cases_cat_2 = cut(cases_7d_avg_100K, breaks = c(0, 15, 30, 150)),
           cases_cat_75 = cut(cases_7d_avg_100K*.75, breaks = c(0, 15, 30, 150)),
           cases_cat_50 = cut(cases_7d_avg_100K*.5, breaks = c(0, 15, 30, 150)),
           cases_cat_25 = cut(cases_7d_avg_100K*.25, breaks = c(0, 15, 30, 150))) %>%
    separate(var, into = c("Grades", "Mode"), sep = "_") %>%
    #dplyr::select(District.Name, time, State, Students.,county,cases_7d_avg_100K,
    #              GR.6.8_H, GR.6.8_T, GR.6.8_V, GR.9.12_H,
    #              GR.9.12_T, GR.9.12_V, Grades, Mode, value, cases_cat) %>%
    arrange(District.Name, time) %>% 
    # filter out districts are missing grades
    filter(!is.na(value)) %>%
    mutate(Mode = case_when(Mode=="H"~"Hybrid", Mode=="T"~"In-Person", Mode=="V"~"Remote"),
           Mode = factor(Mode, levels = c("Remote", "Hybrid", "In-Person")))
  
#### ANALYSIS ####
i = h %>% group_by(cases_cat, cases_cat_2, Mode, Grades, time) %>%
    mutate(kids = Students.*value/100,
           cases_cat = fct_rev(cases_cat),
           cases_cat2 = fct_rev(cases_cat_2)) %>%
    dplyr::select(cases_cat, Mode, Grades, Students., value, kids)

ggplot(i %>% filter(Grades=="K.12"), aes(x = Mode, y = kids, group = cases_cat, fill = cases_cat)) + 
  geom_bar(stat = "identity", position = "stack") + 
  facet_grid(.~time) + theme_opts + labs(x = "", y = "") + 
  scale_x_discrete(expand = c(0,0)) + 
  scale_y_continuous(expand = c(0,0))

i = h %>% group_by(cases_cat_2, Mode, Grades, time) %>%
  mutate(kids = Students.*value/100,
         cases_cat_2 = (cases_cat_2)) %>%
  dplyr::select(cases_cat, Mode, Grades, Students., value, kids)

ggplot(i %>% filter(Grades=="K.12"), aes(x = cases_cat_2, y = kids, group = Mode, fill = Mode)) + 
  geom_bar(stat = "identity", position = "stack") + 
  facet_grid(.~time) + theme_opts + labs(x = "", y = "") + 
  scale_x_discrete(expand = c(0,0)) + 
  scale_y_continuous(expand = c(0,0), labels = comma_format()) + 
  scale_fill_manual(name = "",
                     values = pal[c(1,3,4)]) + 
  theme(strip.text = element_text(size = 8, face = "bold")) +
  labs(x = "Average daily county cases/100K")

# save plot
ggsave("K_12_1.png", plot = last_plot(), width = 7, height = 3, dpi = 1000)

j = h %>% filter(Grades=="K.12" & time=="2021-01-05") %>% 
  gather(scenario, category, cases_cat_2, cases_cat_75, cases_cat_50, cases_cat_25) %>%
  mutate(scenario = case_when(scenario=="cases_cat_2"~"January 5, 2021", scenario=="cases_cat_75"~"-25%",
                              scenario=="cases_cat_50"~"-50%", scenario=="cases_cat_25"~"-75%"),
         scenario = factor(scenario, levels = c("January 5, 2021", "-25%", "-50%", "-75%"))) %>%
  group_by(Mode, scenario, category) %>%
  summarize(kids = Students.*value/100)

ggplot(j, aes(x = category, y = kids, group = Mode, fill = Mode)) + 
  geom_bar(stat = "identity", position = "stack") + 
  facet_grid(.~scenario) + theme_opts + labs(x = "", y = "") + 
  scale_x_discrete(expand = c(0,0)) + 
  scale_y_continuous(expand = c(0,0), labels = comma_format()) + 
  scale_fill_manual(name = "",
                    values = pal[c(1,3,4)]) + 
  theme(strip.text = element_text(size = 8, face = "bold")) +
  labs(x = "Average daily county cases/100K")

ggsave("K_12_2.png", plot = last_plot(), width = 8, height = 3, dpi = 1000)

k = h %>% filter(Grades=="K.12" & time=="2021-01-05") %>% 
  gather(scenario, category, cases_cat_2, cases_cat_75, cases_cat_50, cases_cat_25) %>%
  mutate(scenario = case_when(scenario=="cases_cat_2"~"January 5, 2021", scenario=="cases_cat_75"~"-25%",
                              scenario=="cases_cat_50"~"-50%", scenario=="cases_cat_25"~"-75%"),
         scenario = factor(scenario, levels = c("January 5, 2021", "-25%", "-50%", "-75%"))) %>%
  group_by(Mode, scenario, category) %>%
  summarize(kids = Students.*value/100) %>%
  filter(Mode=="In-Person" | category!="(30,150]") %>%
  mutate(rev_cat = case_when(category=="(30,150]"~"Above CA threshold",
         category=="(15,30]"~"Below CA threshold",
         category=="(0,15]"~"Below CDC threshold"),
         rev_cat = fct_rev(rev_cat)) %>% 
  group_by(scenario, rev_cat) %>%
  summarize(kids = sum(kids)) %>% mutate(perc = kids/13902693)
  
ggplot(k, aes(x = scenario, y = kids, group = rev_cat, fill = rev_cat)) + 
    geom_bar(stat = "identity", position = "stack") + 
    theme_opts + labs(x = "", y = "") + 
    scale_x_discrete(expand = c(0,0)) + 
    scale_y_continuous(expand = c(0,0), labels = comma_format()) + 
    scale_fill_manual(name = "",
                      values = pal[c(3,1,4)]) + 
    theme(strip.text = element_text(size = 8, face = "bold")) +
  geom_text(aes(label = round(perc*100)), position = position_stack(vjust = .5), col = "white", size = 3) + 
    labs(x = "Average daily county cases/100K", title = "Schools open under different scenarios") + 
  geom_hline(yintercept = 13902693, color = "grey", lty = 2)

ggsave("K_12_3.png", plot = last_plot(), width = 8, height = 3, dpi = 1000)


k = h %>% filter(Grades=="K.12") %>% 
   group_by(Mode, time, cases_cat_2) %>%
  summarize(kids = Students.*value/100) %>%
  filter(Mode=="In-Person" | cases_cat_2!="(30,150]") %>%
  mutate(rev_cat = case_when(cases_cat_2=="(30,150]"~"Above CA threshold",
                             cases_cat_2=="(15,30]"~"Below CA threshold",
                             cases_cat_2=="(0,15]"~"Below CDC threshold"),
         rev_cat = fct_rev(rev_cat)) %>% 
  group_by(time, rev_cat) %>%
  summarize(kids = sum(kids)) %>% mutate(perc = kids/13902693)

ggplot(k, aes(x = as.character(time), y = kids, group = rev_cat, fill = rev_cat)) + 
  geom_bar(stat = "identity", position = "stack") + 
  theme_opts + labs(x = "", y = "") + 
  scale_x_discrete(expand = c(0,0)) + 
  scale_y_continuous(expand = c(0,0), labels = comma_format()) + 
  scale_fill_manual(name = "",
                    values = pal[c(3,1,4)]) + 
  theme(strip.text = element_text(size = 8, face = "bold")) +
  geom_text(aes(label = paste(round(perc*100), "%", sep = "")), position = position_stack(vjust = .5), col = "white", size = 3) + 
  labs(x = "Average daily county cases/100K", title = "Schools open under different scenarios") + 
  geom_hline(yintercept = 13902693, color = "grey", lty = 2)

ggsave("K_12_4.png", plot = last_plot(), width = 8, height = 3, dpi = 1000)

k = k %>% mutate(kids = kids/1E6, perc = round(perc*100))
# calculate estimates
f %>% group_by(time) %>% 
  summarize(tot = sum(Students.))
13.9/50.7

View(i %>% group_by(time, Grades, Mode) %>% 
  summarize(tot = sum(kids)) %>% mutate(perc = tot/sum(tot)) %>%
  arrange(Grades, Mode))

View(i %>% group_by(time, Grades, cases_cat_2) %>% 
  summarize(tot = sum(kids)) %>% mutate(perc = tot/sum(tot)) %>%
  arrange(cases_cat_2,Grades))

