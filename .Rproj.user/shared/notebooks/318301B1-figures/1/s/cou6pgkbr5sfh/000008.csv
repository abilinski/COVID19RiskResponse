"0",""
"0","# library"
"0","library(here)"
"0",""
"0","# source global options"
"0","source(here(""global_options.R""))"
"0",""
"0","# set working directory"
"0","setwd(here(""0 - Data""))"
"2","The working directory was changed to /Users/abilinski/Dropbox/CMU Survey/National analysis/Public code/0 - Data inside a notebook chunk. The working directory will be reset when the chunk is finished running. Use the knitr root.dir option in the setup chunk to change the working directory for notebook chunks."
"0","load(""summary_extract2021-02-06.RData"")"
"0","summer_df = summer"
"0","fall_df = fall"
"0",""
"0","# state names + abbreviations + populations"
"0","pop = read.csv(""population.csv"")"
"0",""
"0","# load and process case data"
"0","data <- read.csv(""all-states-history2.csv"") %>% left_join(pop, c(""state"" = ""State"")) %>%"
"0","  mutate(date_cleaned = as.Date(as.character(date), format = ""%m/%d/%y""),"
"0","         week = isoweek(date_cleaned)) %>%"
"0","  group_by(week) %>% mutate(date.temp = max(date_cleaned)) %>% ungroup() %>%"
"0","  dplyr::group_by(state, region, StateName, week, date.temp, Population) %>% "
"0","  dplyr::summarize(cases = sum(positiveIncrease), deaths = sum(deathIncrease), hosp = sum(hospitalizedIncrease),"
"0","            perc_pos = sum(positiveIncrease)/sum(positiveIncrease + negativeIncrease),"
"0","            cases100K = cases/Population[1]*100000, deaths100K = deaths/Population[1]*100000, hosp100K = hosp/Population[1]*100000,"
"0","            tests = sum(positiveIncrease + negativeIncrease), tests_prop = tests/Population[1]) %>%"
"0","  gather(var, value, cases, deaths, hosp, perc_pos, cases100K, deaths100K, hosp100K, tests, tests_prop) %>%"
"0","  group_by(state, region, var) %>% mutate("
"0","    value = ifelse(value<0, 0, value),"
"0","    lag1 = lag(value, 1),"
"0","                                           lag2 = lag(value, 2),"
"0","                          lead = lead(value, 1),"
"0","                           lead2 = lead(value, 2),"
"0","                                           chg = value - lag1,"
"0","                                           perc_chg = (value - lag1)/lag1) %>%"
"0","  gather(var2, value2, value, lag1, lag2, lead, lead2, chg, perc_chg) %>% mutate(ind = paste(var, var2, sep = ""_"")) %>%"
"0","  ungroup() %>% dplyr::select(-var, -var2) %>%"
"0","  spread(ind, value2)"
"2","`summarise()` regrouping output by 'state', 'region', 'StateName', 'week', 'date.temp' (override with `.groups` argument)
"
"0","# peak states over time"
"0","data2 = data %>% group_by(state) %>% "
"0","  summarize(sum1 = sum(cases100K_value[date.temp>=""2020-03-01"" & date.temp<""2020-05-31""]),"
"0","            sum2 = sum(cases100K_value[date.temp>=""2020-07-01"" & date.temp<""2020-08-31""]),"
"0","            sum3 = sum(cases100K_value[date.temp>=""2020-09-01"" & date.temp<""2020-10-31""]))"
"2","`summarise()` ungrouping output (override with `.groups` argument)
"
"0","# peak states by season, excluding LA due to repetition"
"0","spring = unlist(data2 %>% arrange(-sum1) %>% dplyr::select(state) %>% filter(state!=""LA""))[1:10]"
"0","summer = unlist(data2 %>% arrange(-sum2) %>% dplyr::select(state) %>% filter(state!=""LA""))[1:10]"
"0","fall = unlist(data2 %>% arrange(-sum3) %>% dplyr::select(state))[1:10]"
"0","save(spring, summer, fall, file = ""state_cats.RData"")"
"0",""
"0","# group by regions/total"
"0","data3 = data %>% gather(var, value, -c(1:5)) %>% "
"0","  group_by(week, region, var) %>% "
"0","  dplyr::summarize(value = sum(value)) %>% tidyr::spread(var, value) %>%"
"0","  mutate(cases100K_value = cases_value/Population*100000)"
"2","`summarise()` regrouping output by 'week', 'region' (override with `.groups` argument)
"
"0","data4 = data %>% gather(var, value, -c(1:5)) %>% "
"0","  group_by(week, var) %>% "
"0","  dplyr::summarize(value = sum(value, na.rm = T)) %>% tidyr::spread(var, value) %>%"
"0","  mutate(cases100K_value = cases_value/Population*100000)"
"2","`summarise()` regrouping output by 'week' (override with `.groups` argument)
"
"0","# states"
"0","all = h %>% filter(date >= ""2020-05-15"" & date<=""2020-11-22"") %>%"
"0","  left_join(data, c(""state_id"" = ""state"", ""week"" = ""week"")) %>%"
"0","  filter(!is.na(state_id))"
"0",""
"0","# regions"
"0","regions = j %>% filter(date >= ""2020-05-15"" & date<=""2020-11-22"") %>%"
"0","  left_join(data3, c(""region"" = ""region"", ""week"" = ""week""))"
"0",""
"0","# us"
"0","us = i %>% filter(date >= ""2020-05-15"" & date<=""2020-11-22"") %>%"
"0","  left_join(data4, c(""week"" = ""week""))"
"0","  "
"0","# add labels "
"0","make_labs = function(all){"
"0","  "
"0","    out = all %>% "
"0","      mutate(worried_sick = worried_sickv2, "
"0","             avoid_people = avoid_peoplev2, "
"0","             activities_masked_or_none = activities_masked_or_nonev2) %>%"
"0","      filter(!is.na(region) & region!="""") %>%"
"0","      gather(var, value, worried_sick, cases100K_value, contacts_avg_mod, avoid_people, "
"0","             activities_masked_or_none) %>%"
"0","      mutate(region = factor(region, levels = c(""Northeast"", ""West"", ""South"", ""Midwest"")),"
"0","             var_cat = ifelse(grepl(""cases100K_value"", var), ""Cases per 100K"", ""Worried about severe illness""),"
"0","             var_cat = ifelse(grepl(""avoid"", var), ""Avoiding others all/most of time"", var_cat),"
"0","             var_cat = ifelse(var==""contacts_avg_mod"", ""Average contacts outside home"", var_cat),"
"0","             var_cat = ifelse(var==""activities_masked_or_none"", ""Unmasked public activities"", var_cat),"
"0","             var_cat = factor(var_cat, levels = c(""Cases per 100K"", ""Worried about severe illness"", "
"0","                                                 ""Avoiding others all/most of time"","
"0","                                                 ""Average contacts outside home"", "
"0","                                                 ""Unmasked public activities"")))"
"0","}"
"0",""
"0","# make averages"
"0","plotK = make_labs(all)"
"0","plotR = make_labs(regions) %>% mutate(state_id=""Average"")"
"0",""
"0","# combine state-level data frame with overall data frame"
"0","plot_data = bind_rows(plotK, plotR) %>% "
"0","  mutate(alpha = ifelse(state_id==""Average"", 1, .05)) "
"0",""
"0","# function to make plots"
"0","make_plot = function(df, date_start, date_end, var_keep){"
"0","  plot = ggplot(df %>% filter(var == var_keep & "
"0","                                date>=date_start & date<=date_end), "
"0","                aes(x = date, y = value, group = state_id, alpha = alpha)) + "
"0","    geom_line() + "
"0","    facet_grid(var_cat~region, scales = ""free"") + "
"0","    scale_alpha(guide = F) +"
"0","    theme_opts + labs(x = """", y = """") + ylim(0, NA)"
"0","  "
"0","  return(plot)"
"0","}"
"0",""
"0","#View(us %>% dplyr::select(date, worried_sick))"
"0",""
